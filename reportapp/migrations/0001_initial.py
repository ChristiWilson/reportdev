# Generated by Django 2.1.8 on 2019-05-19 03:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='What is the title for this section of text.', max_length=100)),
                ('text', models.TextField(help_text='Only enter a paragraph at a time.')),
            ],
            options={
                'db_table': 'body',
            },
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('federal_charge', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'charges',
            },
        ),
        migrations.CreateModel(
            name='FedStatute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, max_length=100)),
                ('case_law_id', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'federal_statutes',
            },
        ),
        migrations.CreateModel(
            name='Footnote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('VOL1', 'Volume I'), ('VOL2', 'Volume 2'), ('QUES', 'Questions')], max_length=4)),
                ('footnote_number', models.PositiveSmallIntegerField()),
                ('text', models.TextField(max_length=2000)),
                ('listid', models.CharField(max_length=10)),
                ('page_number', models.PositiveSmallIntegerField(blank=True)),
            ],
            options={
                'db_table': 'footnotes',
            },
        ),
        migrations.CreateModel(
            name='Glossary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(choices=[('N', 'Name'), ('E', 'Entity'), ('A', 'Acronym')], max_length=1)),
                ('text', models.TextField()),
                ('glossaryid', models.CharField(help_text='This is used in the template id field', max_length=10)),
            ],
            options={
                'db_table': 'glossary',
            },
        ),
        migrations.CreateModel(
            name='QAText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qa_choice', models.CharField(choices=[('Q', 'Question'), ('A', 'Answer')], max_length=1)),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'qa_text',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.CharField(choices=[('INT', 'Introduction'), ('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V')], default='I', max_length=3)),
                ('category', models.CharField(choices=[('INTRO', 'Introduction'), ('QUES', 'Question'), ('SUBQ', 'Sub Question')], default='QUES', max_length=5)),
                ('title', models.CharField(blank=True, help_text='Explanation Of the Question', max_length=100)),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_of_report', models.CharField(choices=[('VI', 'Volume I'), ('VII', 'Volume II'), ('APA', 'Appendix A'), ('APB', 'Appendix B'), ('APC', 'Appendix C'), ('APD', 'Appendix D')], default='VI', help_text='Highest level of the report', max_length=3)),
                ('section_of_report', models.CharField(choices=[('IN', 'Into'), ('EX', 'Executive Summary'), ('SE', 'Section'), ('C', 'Conclusion')], default='SE', help_text='Where in the report', max_length=2)),
                ('sub_section_of_report', models.CharField(choices=[('M', 'Main'), ('S1', 'Subsection 1'), ('S2', 'Sub Section 2'), ('S3', 'Sub Section 3'), ('S4', 'Sub Section 4')], default='M', help_text='What level in the report. This is used for the ol type', max_length=2)),
                ('section_title', models.CharField(help_text='This is what is bold at beginning of the section.', max_length=100)),
                ('page_number', models.PositiveSmallIntegerField(help_text='This is the actual page in the report')),
                ('adobe_page', models.PositiveSmallIntegerField(blank=True, help_text='What is the adobe page?')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='ReportCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, max_length=100)),
                ('plaintiff', models.CharField(max_length=50)),
                ('defendant', models.CharField(max_length=50)),
                ('tried', models.BooleanField(default=False)),
                ('counts', models.PositiveSmallIntegerField(default=1)),
                ('court', models.CharField(max_length=50)),
                ('num_convictions', models.PositiveSmallIntegerField(default=0)),
                ('num_not_guilty', models.PositiveSmallIntegerField(default=0)),
                ('hung_jury', models.PositiveSmallIntegerField(default=0)),
                ('ptid', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'report_cases',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='qatext',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', related_query_name='questions', to='reportapp.Question', verbose_name='question being asked'),
        ),
        migrations.AddField(
            model_name='charge',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_case', related_query_name='report_cases', to='reportapp.ReportCase', verbose_name='investigation case'),
        ),
        migrations.AddField(
            model_name='body',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report', related_query_name='reports', to='reportapp.Report', verbose_name='the related section of the report'),
        ),
    ]
